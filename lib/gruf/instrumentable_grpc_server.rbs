# Copyright (c) 2017-present, BigCommerce Pty. Ltd. All rights reserved
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
module Gruf
  class InstrumentableGrpcServer < ::GRPC::RpcServer
    def initialize: (?pool_size: Integer pool_size, ?max_waiting_requests: Integer max_waiting_requests, ?poll_period: Integer poll_period, ?pool_keep_alive: Integer pool_keep_alive, ?connect_md_proc: Proc? connect_md_proc, ?server_args: ::Hash[Symbol, Object] server_args, ?interceptors: Array[::Gruf::Interceptors::ServerInterceptor] interceptors, ?event_listener_proc: Proc? event_listener_proc) -> void

    def notify: (Symbol event) -> (nil | untyped)

    def available?: (::Google::Protobuf::Descriptor an_rpc) -> ( bool | nil )

    def implemented?: (::Google::Protobuf::Descriptor an_rpc) -> ( bool | nil )
  end
end
