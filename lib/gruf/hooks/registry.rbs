# Copyright (c) 2017-present, BigCommerce Pty. Ltd. All rights reserved
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
module Gruf
  module Hooks
    class Registry
      class HookNotFoundError < StandardError
      end

      def initialize: () -> void
      def use: (::Class hook_class, ?::Hash[::Symbol, ::Object] options) -> void
      def remove: (::Class hook_class) -> void
      def insert_before: (::Class before_class, ::Class hook_class, ?::Hash[::Symbol, ::Object] options) -> void
      def insert_after: (::Class after_class, ::Class hook_class, ?::Hash[::Symbol, ::Object] options) -> void
      def list: () -> ::Array[::Class]
      def prepare: () -> ::Array[::Gruf::Hooks::Base]
      def clear: () -> void
      def count: () -> ::Integer

      private

      def hooks_mutex: () { () -> untyped } -> untyped
    end
  end
end
