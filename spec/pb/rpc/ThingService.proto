// coding: utf-8
// Copyright (c) 2017-present, BigCommerce Pty. Ltd. All rights reserved
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
// documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
// Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
syntax = "proto3";

package rpc;

// Demonstration service
service ThingService {

    // Request calls
    // For testing a request/response call
    rpc GetThing(GetThingRequest) returns (GetThingResponse) {}
    // For testing a server streaming call
    rpc GetThings(GetThingsRequest) returns (stream Thing) {}
    // For testing a client streaming call
    rpc CreateThings(stream Thing) returns (CreateThingsResponse) {}
    // For testing a bidirectional streaming call
    rpc CreateThingsInStream(stream Thing) returns (stream Thing) {}

    // Error calls
    // For testing a generic failure
    rpc GetFail(GetThingRequest) returns (GetThingResponse) {}
    // For testing a field error
    rpc GetFieldErrorFail(GetThingRequest) returns (GetThingResponse) {}
    // For testing field errors that _may_ happen
    rpc GetContextualFieldErrorFail(GetThingRequest) returns (GetThingResponse) {}
    // For testing an exception
    rpc GetException(GetThingRequest) returns (GetThingResponse) {}
    // For testing an uncaught exception
    rpc GetUncaughtException(GetThingRequest) returns (GetThingResponse) {}

    // For testing multiple controllers binding to a single service
    rpc GetStuff(GetStuffRequest) returns (GetStuffResponse) {}
}

// Represents a generic thing
message Thing {
    uint32 id = 1;
    string name = 2;
}

// Requests

// Request for geting a single thing
message GetThingRequest {
    uint32 id = 1;
    uint32 sleep = 2;
}

// Response for getting a single thing
message GetThingResponse {
    Thing thing = 1;
}

// Request for getting multiple things
message GetThingsRequest {
    string search = 1;
    uint32 limit = 2;
}

// Response for creating multiple things
message CreateThingsResponse {
    repeated Thing things = 1;
}

// Represents generic stuff
message Stuff {
    uint32 id = 1;
}

// Requests

// Request for getting single stuff
message GetStuffRequest {
    uint32 id = 1;
}

// Response for getting single stuff
message GetStuffResponse {
    Stuff stuff = 1;
}
